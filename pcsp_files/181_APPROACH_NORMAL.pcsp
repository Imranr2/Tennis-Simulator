enum{f_ad_ct, f_de_ct, n_ad_ct, n_de_ct}; //serve position: ad court or deuce court
enum{player1, player2, na};

var turn = na; //serve turn;
var fscore = 0;
var nscore = 0;
var won = na;
var ball = 9;
var points = 7;
#define p0 201;
#define p1 26;
#define p2 166;
#define p3 141;
#define p4 260;
#define p5 95;
#define p6 82;
#define p7 58;
#define p8 8;
#define p9 17;
#define p10 202;
#define p11 15;
#define p12 140;
#define p13 106;
#define p14 240;
#define p15 53;
#define p16 47;
#define p17 114;
#define p18 7;
#define p19 19;
#define p20 64;
#define p21 14;
#define p22 111;
#define p23 15;
#define p24 88;
#define p25 33;
#define p26 3;
#define p27 13;
#define p28 104;
#define p29 6;
#define p30 88;
#define p31 33;
#define p32 21;
#define p33 41;
#define p34 170;
#define p35 3;
#define p36 104;
#define p37 132;
#define p38 14;
#define p39 127;
#define p40 7;
#define p41 95;
#define p42 227;
#define p43 79;
#define p44 148;
#define p45 0;
#define p46 0;
#define p47 1;
#define p48 2;
#define p49 12;
#define p50 0;
#define p51 0;
#define p52 0;
#define p53 0;
#define p54 54;
#define p55 157;
#define p56 210;
#define p57 253;
#define p58 171;
#define p59 65;
#define p60 100;
#define p61 129;
#define p62 69;
#define p63 25;
#define p64 6;
#define p65 4;
#define p66 15;
#define p67 2;
#define p68 170;
#define p69 219;
#define p70 75;
#define p71 32;
#define p72 17;
#define p73 452;
#define p74 48;
#define p75 206;
#define p76 10;
#define p77 5;
#define p78 0;
#define p79 27;
#define p80 2;
#define p81 2;
#define p82 79;
#define p83 225;
#define p84 3;
#define p85 4;
#define p86 6;
#define p87 0;
#define p88 0;
#define p89 0;
#define p90 0;
#define p91 0;
#define p92 0;
#define p93 0;
#define p94 0;
#define p95 0;
#define p96 8;
#define p97 13;
#define p98 0;
#define p99 0;
#define p100 1;
#define p101 0;
#define p102 1;
#define p103 0;
#define p104 0;
#define p105 0;
#define p106 0;
#define p107 0;
#define p108 0;
#define p109 0;
#define p110 3;
#define p111 2;
#define p112 0;
#define p113 0;
#define p114 0;
#define p115 19;
#define p116 7;
#define p117 23;
#define p118 0;
#define p119 0;
#define p120 0;
#define p121 0;
#define p122 0;
#define p123 0;
#define p124 6;
#define p125 22;
#define p126 0;
#define p127 0;
#define p128 0;
#define p129 0;
#define p130 0;
#define p131 0;
#define p132 4;
#define p133 6;
#define p134 0;
#define p135 0;
#define p136 0;
#define p137 0;
#define p138 0;
#define p139 1;
#define p140 5;
#define p141 3;
#define p142 0;
#define p143 0;
#define p144 0;
#define p145 0;
#define p146 0;
#define p147 0;
#define p148 8;
#define p149 12;
#define p150 179;
#define p151 55;
#define p152 190;
#define p153 88;
#define p154 268;
#define p155 74;
#define p156 120;
#define p157 54;
#define p158 2;
#define p159 18;
#define p160 173;
#define p161 63;
#define p162 187;
#define p163 73;
#define p164 220;
#define p165 30;
#define p166 66;
#define p167 103;
#define p168 4;
#define p169 17;
#define p170 38;
#define p171 13;
#define p172 114;
#define p173 4;
#define p174 80;
#define p175 71;
#define p176 1;
#define p177 13;
#define p178 122;
#define p179 6;
#define p180 74;
#define p181 40;
#define p182 13;
#define p183 36;
#define p184 189;
#define p185 1;
#define p186 91;
#define p187 100;
#define p188 12;
#define p189 97;
#define p190 1;
#define p191 73;
#define p192 186;
#define p193 119;
#define p194 238;
#define p195 0;
#define p196 0;
#define p197 0;
#define p198 2;
#define p199 14;
#define p200 2;
#define p201 0;
#define p202 0;
#define p203 0;
#define p204 76;
#define p205 161;
#define p206 172;
#define p207 217;
#define p208 183;
#define p209 31;
#define p210 100;
#define p211 143;
#define p212 41;
#define p213 24;
#define p214 0;
#define p215 2;
#define p216 7;
#define p217 1;
#define p218 123;
#define p219 156;
#define p220 82;
#define p221 27;
#define p222 15;
#define p223 396;
#define p224 84;
#define p225 321;
#define p226 4;
#define p227 3;
#define p228 0;
#define p229 8;
#define p230 2;
#define p231 3;
#define p232 108;
#define p233 228;
#define p234 3;
#define p235 6;
#define p236 11;
#define p237 0;
#define p238 0;
#define p239 0;
#define p240 0;
#define p241 0;
#define p242 0;
#define p243 0;
#define p244 0;
#define p245 0;
#define p246 8;
#define p247 10;
#define p248 0;
#define p249 0;
#define p250 3;
#define p251 0;
#define p252 3;
#define p253 2;
#define p254 0;
#define p255 0;
#define p256 0;
#define p257 0;
#define p258 0;
#define p259 0;
#define p260 1;
#define p261 1;
#define p262 3;
#define p263 0;
#define p264 0;
#define p265 13;
#define p266 19;
#define p267 45;
#define p268 0;
#define p269 0;
#define p270 0;
#define p271 0;
#define p272 0;
#define p273 0;
#define p274 18;
#define p275 37;
#define p276 0;
#define p277 0;
#define p278 1;
#define p279 0;
#define p280 0;
#define p281 0;
#define p282 14;
#define p283 7;
#define p284 0;
#define p285 0;
#define p286 1;
#define p287 0;
#define p288 0;
#define p289 0;
#define p290 2;
#define p291 6;
#define p292 0;
#define p293 0;
#define p294 0;
#define p295 0;
#define p296 0;
#define p297 0;
#define p298 4;
#define p299 11;
TieBreakGame = WhoServe1st; (Player1Serve [] Player2Serve);
WhoServe1st = []i:{f_de_ct,n_de_ct}@ TossCoin{turn = i} -> Skip;
Player1Serve = [won == na && turn == f_de_ct ]FedReady_DeCt -> De_Ply1Serve [] [won == na && turn == f_ad_ct] FedReady_AdCt -> Ad_Ply1Serve;
Player2Serve = [won == na && turn == n_de_ct]NadReady_DeCt -> De_Ply2Serve [] [ won == na && turn == n_ad_ct] NadReady_AdCt -> Ad_Ply2Serve;
NextPt = Player1Serve [] Player2Serve [] ([won != na] GameOver -> Skip);
 
De_Ply1Serve = pcase {
   p0: ServeT_in{ball=5} -> Ply2_BackHandR
   p1: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p2: ServeWide_in{ball=6} -> Ply2_ForeHandR
   p3: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p4: Serve_err{ball=9} -> De_Ply1Serve_2nd};
 
De_Ply1Serve_2nd = pcase {                 //1st serve is out
   p5: ServeT_in{ball=5} -> Ply2_BackHandR
   p6: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p7: ServeWide_in{ball=6} -> Ply2_ForeHandR
   p8: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p9: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2}
                                                                else { turn = (turn+1)%4} }-> NextPt
        };
 
Ad_Ply1Serve = pcase {
   p10: ServeT_in{ball=5} -> Ply2_ForeHandR
   p11: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p12: ServeWide_in{ball=4} -> Ply2_BackHandR
   p13: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p14: Serve_err{ball=9} -> Ad_Ply1Serve_2nd};
 
Ad_Ply1Serve_2nd = pcase {                 //1st serve is out
   p15: ServeT_in{ball=5} -> Ply2_ForeHandR
   p16: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p17: ServeWide_in{ball=4} -> Ply2_BackHandR
   p18: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p19: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2}
                                                                else { turn = (turn+1)%4} }-> NextPt
        };
         
Ply1_ForeHandR = ifa (turn == n_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
   pcase {
   p20: FH_CrossCourt{ball=6} -> Ply2_de_stroke
   p21: FH_DownLine{ball=4} -> Ply2_ad_stroke
   p22: FH_DownMid{ball=5} -> Ply2_mid_stroke
   p23: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p24: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
   p25: FH_InsideOut{ball =4} -> Ply2_ad_stroke
   p26: FH_InsideIn{ball=6} -> Ply2_de_stroke
   p27: FH_CrossCourt{ball=6} -> Ply2_de_stroke
   p28: FH_DownMid{ball=5} -> Ply2_mid_stroke
   p29: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p30: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
 
Ply1_BackHandR = ifa (turn == n_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
   pcase {
   p31: BH_CrossCourt{ball=4} -> Ply2_ad_stroke
   p32: BH_InsideIn{ball=4} -> Ply2_ad_stroke
   p33: BH_InsideOut{ball=6} -> Ply2_de_stroke
   p34: BH_DownMid{ball=5} -> Ply2_mid_stroke
   p35: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p36: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
   p37: BH_CrossCourt{ball=4} -> Ply2_ad_stroke
   p38: BH_DownLine{ball=6} -> Ply2_de_stroke
   p39: BH_DownMid{ball=5} -> Ply2_mid_stroke
   p40: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p41: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
 
// deuce stroke is when player1 hit position is 1
Ply1_de_stroke = pcase{
   p42: FH_NA_Crosscourt{ball=6} -> Ply2_de_stroke
   p43: FH_NA_Downline{ball=4} -> Ply2_ad_stroke
   p44: FH_NA_DownMid{ball=5} -> Ply2_mid_stroke
   p45: BH_NA_InsideIn{ball=4} -> Ply2_ad_stroke
   p46: BH_NA_InsideOut{ball=6} -> Ply2_de_stroke
   p47: BH_NA_DownMid{ball=5} -> Ply2_mid_stroke
   p48: FH_A_Crosscourt{ball=6} -> Ply2_de_stroke_ap
   p49: FH_A_Downline{ball=4} -> Ply2_ad_stroke_ap
   p50: FH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p51: BH_A_InsideIn{ball=4} -> Ply2_ad_stroke_ap
   p52: BH_A_InsideOut{ball=6} -> Ply2_de_stroke_ap
   p53: BH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p54: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p55: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
  
// mid stroke is when player1 hit position is 2
Ply1_mid_stroke = pcase{
   p56: FH_NA_InsideOut{ball=4} -> Ply2_ad_stroke
   p57: FH_NA_Crosscourt{ball=6} -> Ply2_de_stroke
   p58: FH_NA_DownMid{ball=5} -> Ply2_mid_stroke
   p59: BH_NA_InsideOut{ball=6} -> Ply2_de_stroke
   p60: BH_NA_Crosscourt{ball=4} -> Ply2_ad_stroke
   p61: BH_NA_DownMid{ball=5} -> Ply2_mid_stroke
   p62: FH_A_InsideOut{ball=4} -> Ply2_ad_stroke_ap
   p63: FH_A_Crosscourt{ball=6} -> Ply2_de_stroke_ap
   p64: FH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p65: BH_A_InsideOut{ball=6} -> Ply2_de_stroke_ap
   p66: BH_A_Crosscourt{ball=4} -> Ply2_ad_stroke_ap
   p67: BH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p68: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p69: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
 
// ad stroke is when player1 hit position is 3
Ply1_ad_stroke = pcase{
   p70: FH_NA_InsideOut{ball=4} -> Ply2_ad_stroke
   p71: FH_NA_InsideIn{ball=6} -> Ply2_de_stroke
   p72: FH_NA_DownMid{ball=5} -> Ply2_mid_stroke
   p73: BH_NA_Crosscourt{ball=4} -> Ply2_ad_stroke
   p74: BH_NA_Downline{ball=6} -> Ply2_de_stroke
   p75: BH_NA_DownMid{ball=5} -> Ply2_mid_stroke
   p76: FH_A_InsideOut{ball=4} -> Ply2_ad_stroke_ap
   p77: FH_A_InsideIn{ball=6} -> Ply2_de_stroke_ap
   p78: FH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p79: BH_A_Crosscourt{ball=4} -> Ply2_ad_stroke_ap
   p80: BH_A_Downline{ball=6} -> Ply2_de_stroke_ap
   p81: BH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p82: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p83: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// deuce stroke is when player1 hit position is 1
Ply1_de_stroke_ap = pcase{
   p84: FH_LS_Crosscourt{ball=6} -> Ply2_de_stroke
   p85: FH_LS_Downline{ball=4} -> Ply2_ad_stroke
   p86: FH_LS_DownMid{ball=5} -> Ply2_mid_stroke
   p87: BH_LS_InsideIn{ball=4} -> Ply2_ad_stroke
   p88: BH_LS_InsideOut{ball=6} -> Ply2_de_stroke
   p89: BH_LS_DownMid{ball=5} -> Ply2_mid_stroke
   p90: FH_NLS_Crosscourt{ball=6} -> Ply2_de_stroke_NLS
   p91: FH_NLS_Downline{ball=4} -> Ply2_ad_stroke_NLS
   p92: FH_NLS_DownMid{ball=5} -> Ply2_mid_stroke_NLS
   p93: BH_NLS_InsideIn{ball=4} -> Ply2_ad_stroke_NLS
   p94: BH_NLS_InsideOut{ball=6} -> Ply2_de_stroke_NLS
   p95: BH_NLS_DownMid{ball=5} -> Ply2_mid_stroke_NLS
   p96: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p97: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
  
// mid stroke is when player1 hit position is 2
Ply1_mid_stroke_ap = pcase{
   p98: FH_LS_InsideOut{ball=4} -> Ply2_ad_stroke
   p99: FH_LS_Crosscourt{ball=6} -> Ply2_de_stroke
   p100: FH_LS_DownMid{ball=5} -> Ply2_mid_stroke
   p101: BH_LS_InsideOut{ball=6} -> Ply2_de_stroke
   p102: BH_LS_Crosscourt{ball=4} -> Ply2_ad_stroke
   p103: BH_LS_DownMid{ball=5} -> Ply2_mid_stroke
   p104: FH_NLS_InsideOut{ball=4} -> Ply2_ad_stroke_NLS
   p105: FH_NLS_Crosscourt{ball=6} -> Ply2_de_stroke_NLS
   p106: FH_NLS_DownMid{ball=5} -> Ply2_mid_stroke_NLS
   p107: BH_NLS_InsideOut{ball=6} -> Ply2_de_stroke_NLS
   p108: BH_NLS_Crosscourt{ball=4} -> Ply2_ad_stroke_NLS
   p109: BH_NLS_DownMid{ball=5} -> Ply2_mid_stroke_NLS
   p110: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p111: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
 
// ad stroke is when player1 hit position is 3
Ply1_ad_stroke_ap = pcase{
   p112: FH_LS_InsideOut{ball=4} -> Ply2_ad_stroke
   p113: FH_LS_InsideIn{ball=6} -> Ply2_de_stroke
   p114: FH_LS_DownMid{ball=5} -> Ply2_mid_stroke
   p115: BH_LS_Crosscourt{ball=4} -> Ply2_ad_stroke
   p116: BH_LS_Downline{ball=6} -> Ply2_de_stroke
   p117: BH_LS_DownMid{ball=5} -> Ply2_mid_stroke
   p118: FH_NLS_InsideOut{ball=4} -> Ply2_ad_stroke_NLS
   p119: FH_NLS_InsideIn{ball=6} -> Ply2_de_stroke_NLS
   p120: FH_NLS_DownMid{ball=5} -> Ply2_mid_stroke_NLS
   p121: BH_NLS_Crosscourt{ball=4} -> Ply2_ad_stroke_NLS
   p122: BH_NLS_Downline{ball=6} -> Ply2_de_stroke_NLS
   p123: BH_NLS_DownMid{ball=5} -> Ply2_mid_stroke_NLS
   p124: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p125: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
 
// deuce stroke is when player1 hit position is 1
Ply1_de_stroke_NLS = pcase{
   p126: FH_V_Crosscourt{ball=6} -> Ply2_de_stroke
   p127: FH_V_Downline{ball=4} -> Ply2_ad_stroke
   p128: FH_V_DownMid{ball=5} -> Ply2_mid_stroke
   p129: BH_V_InsideIn{ball=4} -> Ply2_ad_stroke
   p130: BH_V_InsideOut{ball=6} -> Ply2_de_stroke
   p131: BH_V_DownMid{ball=5} -> Ply2_mid_stroke
   p132: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p133: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
  
// mid stroke is when player1 hit position is 2
Ply1_mid_stroke_NLS = pcase{
   p134: FH_V_InsideOut{ball=4} -> Ply2_ad_stroke
   p135: FH_V_Crosscourt{ball=6} -> Ply2_de_stroke
   p136: FH_V_DownMid{ball=5} -> Ply2_mid_stroke
   p137: BH_V_InsideOut{ball=6} -> Ply2_de_stroke
   p138: BH_V_Crosscourt{ball=4} -> Ply2_ad_stroke
   p139: BH_V_DownMid{ball=5} -> Ply2_mid_stroke
   p140: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p141: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// ad stroke is when player1 hit position is 3
Ply1_ad_stroke_NLS = pcase{
   p142: FH_V_InsideOut{ball=4} -> Ply2_ad_stroke
   p143: FH_V_InsideIn{ball=6} -> Ply2_de_stroke
   p144: FH_V_DownMid{ball=5} -> Ply2_mid_stroke
   p145: BH_V_Crosscourt{ball=4} -> Ply2_ad_stroke
   p146: BH_V_Downline{ball=6} -> Ply2_de_stroke
   p147: BH_V_DownMid{ball=5} -> Ply2_mid_stroke
   p148: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p149: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
De_Ply2Serve = pcase {
   p150: ServeT_in{ball=2} -> Ply1_BackHandR
   p151: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p152: ServeWide_in{ball=1} -> Ply1_ForeHandR
   p153: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p154: Serve_err{ball=9} -> De_Ply2Serve_2nd};
 
De_Ply2Serve_2nd = pcase {                 //1st serve is out
   p155: ServeT_in{ball=2} -> Ply1_BackHandR
   p156: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p157: ServeWide_in{ball=1} -> Ply1_ForeHandR
   p158: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p159: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
        };
         
Ad_Ply2Serve = pcase {
   p160: ServeT_in{ball=2} -> Ply1_ForeHandR
   p161: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p162: ServeWide_in{ball=3} -> Ply1_BackHandR
   p163: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p164: Serve_err{ball=9} -> Ad_Ply2Serve_2nd};
 
Ad_Ply2Serve_2nd = pcase {                 //1st serve is out
   p165: ServeT_in{ball=2} -> Ply1_ForeHandR
   p166: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p167: ServeWide_in{ball=3} -> Ply1_BackHandR
   p168: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p169: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
        };
         
Ply2_ForeHandR = ifa (turn == f_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
    pcase {
   p170: FH_CrossCourt{ball = 1} -> Ply1_de_stroke
   p171: FH_DownLine { ball = 3} -> Ply1_ad_stroke
   p172: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
   p173: FH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p174: FH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
      p175: FH_InsideOut{ ball = 3} -> Ply1_ad_stroke
   p176: FH_InsideIn{ball = 1} -> Ply1_de_stroke
   p177: FH_CrossCourt{ball = 1} -> Ply1_de_stroke
   p178: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
   p179: FH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p180: FH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
          
Ply2_BackHandR = ifa (turn == f_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
   pcase {
   p181: BH_CrossCourt{ ball = 3} -> Ply1_ad_stroke
   p182: BH_InsideIn{ball = 3} -> Ply1_ad_stroke
   p183: BH_InsideOut{ ball = 1} -> Ply1_de_stroke
   p184: BH_DownMid{ ball = 2} -> Ply1_mid_stroke
   p185: BH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p186: BH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
   p187: BH_CrossCourt{ ball = 3} -> Ply1_ad_stroke
   p188: BH_DownLine{ ball = 1} -> Ply1_de_stroke
   p189: BH_DownMid{ ball = 2} -> Ply1_mid_stroke
   p190: BH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p191: BH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
 
// deuce stroke is when player2 hit position is 6
Ply2_de_stroke = pcase { // if already
   p192: FH_NA_Crosscourt{ball=6} -> Ply1_de_stroke
   p193: FH_NA_Downline{ball=4} -> Ply1_ad_stroke
   p194: FH_NA_DownMid{ball=5} -> Ply1_mid_stroke
   p195: BH_NA_InsideIn{ball=4} -> Ply1_ad_stroke
   p196: BH_NA_InsideOut{ball=6} -> Ply1_de_stroke
   p197: BH_NA_DownMid{ball=5} -> Ply1_mid_stroke
   p198: FH_A_Crosscourt{ball=6} -> Ply1_de_stroke_ap
   p199: FH_A_Downline{ball=4} -> Ply1_ad_stroke_ap
   p200: FH_A_DownMid{ball=5} -> Ply1_mid_stroke_ap
   p201: BH_A_InsideIn{ball=4} -> Ply1_ad_stroke_ap
   p202: BH_A_InsideOut{ball=6} -> Ply1_de_stroke_ap
   p203: BH_A_DownMid{ball=5} -> Ply1_mid_stroke_ap
   p204: Winner{ ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p205: Error { ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// mid stroke is when player2 hit position is 5
Ply2_mid_stroke = noMove -> pcase{
   p206: FH_NA_InsideOut{ball=4} -> Ply1_ad_stroke
   p207: FH_NA_Crosscourt{ball=6} -> Ply1_de_stroke
   p208: FH_NA_DownMid{ball=5} -> Ply1_mid_stroke
   p209: BH_NA_InsideOut{ball=6} -> Ply1_de_stroke
   p210: BH_NA_Crosscourt{ball=4} -> Ply1_ad_stroke
   p211: BH_NA_DownMid{ball=5} -> Ply1_mid_stroke
   p212: FH_A_InsideOut{ball=4} -> Ply1_ad_stroke_ap
   p213: FH_A_Crosscourt{ball=6} -> Ply1_de_stroke_ap
   p214: FH_A_DownMid{ball=5} -> Ply1_mid_stroke_ap
   p215: BH_A_InsideOut{ball=6} -> Ply1_de_stroke_ap
   p216: BH_A_Crosscourt{ball=4} -> Ply1_ad_stroke_ap
   p217: BH_A_DownMid{ball=5} -> Ply1_mid_stroke_ap
   p218: Winner{ ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p219: Error { ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// ad stroke is when player 2 hit position is 4
Ply2_ad_stroke = pcase{
   p220: FH_NA_InsideOut{ball=4} -> Ply1_ad_stroke
   p221: FH_NA_InsideIn{ball=6} -> Ply1_de_stroke
   p222: FH_NA_DownMid{ball=5} -> Ply1_mid_stroke
   p223: BH_NA_Crosscourt{ball=4} -> Ply1_ad_stroke
   p224: BH_NA_Downline{ball=6} -> Ply1_de_stroke
   p225: BH_NA_DownMid{ball=5} -> Ply1_mid_stroke
   p226: FH_A_InsideOut{ball=4} -> Ply1_ad_stroke_ap
   p227: FH_A_InsideIn{ball=6} -> Ply1_de_stroke_ap
   p228: FH_A_DownMid{ball=5} -> Ply1_mid_stroke_ap
   p229: BH_A_Crosscourt{ball=4} -> Ply1_ad_stroke_ap
   p230: BH_A_Downline{ball=6} -> Ply1_de_stroke_ap
   p231: BH_A_DownMid{ball=5} -> Ply1_mid_stroke_ap
   p232: Winner{ ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p233: Error { ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// deuce stroke is when player1 hit position is 1
Ply2_de_stroke_ap = pcase{
   p234: FH_LS_Crosscourt{ball=6} -> Ply1_de_stroke
   p235: FH_LS_Downline{ball=4} -> Ply1_ad_stroke
   p236: FH_LS_DownMid{ball=5} -> Ply1_mid_stroke
   p237: BH_LS_InsideIn{ball=4} -> Ply1_ad_stroke
   p238: BH_LS_InsideOut{ball=6} -> Ply1_de_stroke
   p239: BH_LS_DownMid{ball=5} -> Ply1_mid_stroke
   p240: FH_NLS_Crosscourt{ball=6} -> Ply1_de_stroke_NLS
   p241: FH_NLS_Downline{ball=4} -> Ply1_ad_stroke_NLS
   p242: FH_NLS_DownMid{ball=5} -> Ply1_mid_stroke_NLS
   p243: BH_NLS_InsideIn{ball=4} -> Ply1_ad_stroke_NLS
   p244: BH_NLS_InsideOut{ball=6} -> Ply1_de_stroke_NLS
   p245: BH_NLS_DownMid{ball=5} -> Ply1_mid_stroke_NLS
   p246: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p247: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// mid stroke is when player1 hit position is 2
Ply2_mid_stroke_ap = pcase{
   p248: FH_LS_InsideOut{ball=4} -> Ply1_ad_stroke
   p249: FH_LS_Crosscourt{ball=6} -> Ply1_de_stroke
   p250: FH_LS_DownMid{ball=5} -> Ply1_mid_stroke
   p251: BH_LS_InsideOut{ball=6} -> Ply1_de_stroke
   p252: BH_LS_Crosscourt{ball=4} -> Ply1_ad_stroke
   p253: BH_LS_DownMid{ball=5} -> Ply1_mid_stroke
   p254: FH_NLS_InsideOut{ball=4} -> Ply1_ad_stroke_NLS
   p255: FH_NLS_Crosscourt{ball=6} -> Ply1_de_stroke_NLS
   p256: FH_NLS_DownMid{ball=5} -> Ply1_mid_stroke_NLS
   p257: BH_NLS_InsideOut{ball=6} -> Ply1_de_stroke_NLS
   p258: BH_NLS_Crosscourt{ball=4} -> Ply1_ad_stroke_NLS
   p259: BH_NLS_DownMid{ball=5} -> Ply1_mid_stroke_NLS
   p260: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p261: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// ad stroke is when player1 hit position is 3
Ply2_ad_stroke_ap = pcase{
   p262: FH_LS_InsideOut{ball=4} -> Ply1_ad_stroke
   p263: FH_LS_InsideIn{ball=6} -> Ply1_de_stroke
   p264: FH_LS_DownMid{ball=5} -> Ply1_mid_stroke
   p265: BH_LS_Crosscourt{ball=4} -> Ply1_ad_stroke
   p266: BH_LS_Downline{ball=6} -> Ply1_de_stroke
   p267: BH_LS_DownMid{ball=5} -> Ply1_mid_stroke
   p268: FH_NLS_InsideOut{ball=4} -> Ply1_ad_stroke_NLS
   p269: FH_NLS_InsideIn{ball=6} -> Ply1_de_stroke_NLS
   p270: FH_NLS_DownMid{ball=5} -> Ply1_mid_stroke_NLS
   p271: BH_NLS_Crosscourt{ball=4} -> Ply1_ad_stroke_NLS
   p272: BH_NLS_Downline{ball=6} -> Ply1_de_stroke_NLS
   p273: BH_NLS_DownMid{ball=5} -> Ply1_mid_stroke_NLS
   p274: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p275: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// deuce stroke is when player1 hit position is 1
Ply2_de_stroke_NLS = pcase{
   p276: FH_V_Crosscourt{ball=6} -> Ply1_de_stroke
   p277: FH_V_Downline{ball=4} -> Ply1_ad_stroke
   p278: FH_V_DownMid{ball=5} -> Ply1_mid_stroke
   p279: BH_V_InsideIn{ball=4} -> Ply1_ad_stroke
   p280: BH_V_InsideOut{ball=6} -> Ply1_de_stroke
   p281: BH_V_DownMid{ball=5} -> Ply1_mid_stroke
   p282: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p283: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
  
// mid stroke is when player1 hit position is 2
Ply2_mid_stroke_NLS = pcase{
   p284: FH_V_InsideOut{ball=4} -> Ply1_ad_stroke
   p285: FH_V_Crosscourt{ball=6} -> Ply1_de_stroke
   p286: FH_V_DownMid{ball=5} -> Ply1_mid_stroke
   p287: BH_V_InsideOut{ball=6} -> Ply1_de_stroke
   p288: BH_V_Crosscourt{ball=4} -> Ply1_ad_stroke
   p289: BH_V_DownMid{ball=5} -> Ply1_mid_stroke
   p290: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p291: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// ad stroke is when player1 hit position is 3
Ply2_ad_stroke_NLS = pcase{
   p292: FH_V_InsideOut{ball=4} -> Ply1_ad_stroke
   p293: FH_V_InsideIn{ball=6} -> Ply1_de_stroke
   p294: FH_V_DownMid{ball=5} -> Ply1_mid_stroke
   p295: BH_V_Crosscourt{ball=4} -> Ply1_ad_stroke
   p296: BH_V_Downline{ball=6} -> Ply1_de_stroke
   p297: BH_V_DownMid{ball=5} -> Ply1_mid_stroke
   p298: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p299: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
#define player1Win won == player1;
#assert TieBreakGame reaches player1Win with prob;

