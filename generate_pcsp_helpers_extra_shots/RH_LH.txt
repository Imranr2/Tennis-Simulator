TieBreakGame = WhoServe1st; (Player1Serve [] Player2Serve);
WhoServe1st = []i:{f_de_ct,n_de_ct}@ TossCoin{turn = i} -> Skip;
Player1Serve = [won == na && turn == f_de_ct ]FedReady_DeCt -> De_Ply1Serve [] [won == na && turn == f_ad_ct] FedReady_AdCt -> Ad_Ply1Serve;
Player2Serve = [won == na && turn == n_de_ct]NadReady_DeCt -> De_Ply2Serve [] [ won == na && turn == n_ad_ct] NadReady_AdCt -> Ad_Ply2Serve;
NextPt = Player1Serve [] Player2Serve [] ([won != na] GameOver -> Skip);

De_Ply1Serve = pcase {                             
			p0: ServeT_in{ball=5} -> Ply2_ForeHandR  
			p1: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p2: ServeWide_in{ball=6} -> Ply2_BackHandR 
			p3: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p4: Serve_err{ball=9} -> De_Ply1Serve_2nd}; 

De_Ply1Serve_2nd = pcase {                 //1st serve is out
			p5: ServeT_in{ball=5} -> Ply2_ForeHandR  
			p6: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p7: ServeWide_in{ball=6} -> Ply2_BackHandR 
			p8: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p9: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
     		 };

Ad_Ply1Serve = pcase {
			p10: ServeT_in{ball=5} -> Ply2_BackHandR  
			p11: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p12: ServeWide_in{ball=4} -> Ply2_ForeHandR
			p13: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p14: Serve_err{ball=9} -> Ad_Ply1Serve_2nd}; 

Ad_Ply1Serve_2nd = pcase {                 //1st serve is out
			p15: ServeT_in{ball=5} -> Ply2_BackHandR  
			p16: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p17: ServeWide_in{ball=4} -> Ply2_ForeHandR
			p18: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p19: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
     		 };    
     		 
Ply1_ForeHandR = ifa (turn == n_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
		 pcase {
			p20: FH_CrossCourt{ball=6} -> Ply2_de_stroke
			p21: FH_DownLine{ball=4} -> Ply2_ad_stroke
			p22: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p23: FHC_CrossCourt{ball=6} -> Ply2_de_stroke
			p24: FHC_DownLine{ball=4} -> Ply2_ad_stroke
			p25: FHC_DownMid{ball=5} -> Ply2_mid_stroke
			p26: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p27: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p28: FH_InsideOut{ball =4} -> Ply2_ad_stroke
			p29: FH_InsideIn{ball=6} -> Ply2_de_stroke
			p30: FH_CrossCourt{ball=6} -> Ply2_de_stroke
			p31: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p32: FHC_InsideOut{ball =4} -> Ply2_ad_stroke
			p33: FHC_InsideIn{ball=6} -> Ply2_de_stroke
			p34: FHC_CrossCourt{ball=6} -> Ply2_de_stroke
			p35: FHC_DownMid{ball=5} -> Ply2_mid_stroke
			p36: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p37: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};

Ply1_BackHandR = ifa (turn == n_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
		 pcase {
			p38: BH_CrossCourt{ball=4} -> Ply2_ad_stroke
			p39: BH_InsideIn{ball=4} -> Ply2_ad_stroke
			p40: BH_InsideOut{ball=6} -> Ply2_de_stroke
			p41: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p42: BHC_CrossCourt{ball=4} -> Ply2_ad_stroke
			p43: BHC_InsideIn{ball=4} -> Ply2_ad_stroke
			p44: BHC_InsideOut{ball=6} -> Ply2_de_stroke
			p45: BHC_DownMid{ball=5} -> Ply2_mid_stroke
			p46: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p47: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p48: BH_CrossCourt{ball=4} -> Ply2_ad_stroke
			p49: BH_DownLine{ball=6} -> Ply2_de_stroke
			p50: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p51: BHC_CrossCourt{ball=4} -> Ply2_ad_stroke
			p52: BHC_DownLine{ball=6} -> Ply2_de_stroke
			p53: BHC_DownMid{ball=5} -> Ply2_mid_stroke
			p54: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p55: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};

// deuce stroke is when player1 hit position is 1
Ply1_de_stroke = pcase{
			p56: FH_Crosscourt{ball=6} -> Ply2_de_stroke
			p57: FH_Downline{ball=4} -> Ply2_ad_stroke
			p58: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p59: BH_InsideIn{ball=4} -> Ply2_ad_stroke
			p60: BH_InsideOut{ball=6} -> Ply2_de_stroke
			p61: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p62: FHC_Crosscourt{ball=6} -> Ply2_de_stroke
			p63: FHC_Downline{ball=4} -> Ply2_ad_stroke
			p64: FHC_DownMid{ball=5} -> Ply2_mid_stroke
			p65: BHC_InsideIn{ball=4} -> Ply2_ad_stroke
			p66: BHC_InsideOut{ball=6} -> Ply2_de_stroke
			p67: BHC_DownMid{ball=5} -> Ply2_mid_stroke
			p68: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p69: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};
	
// mid stroke is when player1 hit position is 2
Ply1_mid_stroke = pcase{
			p70: FH_InsideOut{ball=4} -> Ply2_ad_stroke
			p71: FH_Crosscourt{ball=6} -> Ply2_de_stroke
			p72: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p73: BH_InsideOut{ball=6} -> Ply2_de_stroke
			p74: BH_Crosscourt{ball=4} -> Ply2_ad_stroke
			p75: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p76: FHC_InsideOut{ball=4} -> Ply2_ad_stroke
			p77: FHC_Crosscourt{ball=6} -> Ply2_de_stroke
			p78: FHC_DownMid{ball=5} -> Ply2_mid_stroke
			p79: BHC_InsideOut{ball=6} -> Ply2_de_stroke
			p80: BHC_Crosscourt{ball=4} -> Ply2_ad_stroke
			p81: BHC_DownMid{ball=5} -> Ply2_mid_stroke
			p82: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p83: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt    
	};


// ad stroke is when player1 hit position is 3
Ply1_ad_stroke = pcase{
			p84: FH_InsideOut{ball=4} -> Ply2_ad_stroke
			p85: FH_InsideIn{ball=6} -> Ply2_de_stroke
			p86: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p87: BH_Crosscourt{ball=4} -> Ply2_ad_stroke
			p88: BH_Downline{ball=6} -> Ply2_de_stroke
			p89: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p90: FHC_InsideOut{ball=4} -> Ply2_ad_stroke
			p91: FHC_InsideIn{ball=6} -> Ply2_de_stroke
			p92: FHC_DownMid{ball=5} -> Ply2_mid_stroke
			p93: BHC_Crosscourt{ball=4} -> Ply2_ad_stroke
			p94: BHC_Downline{ball=6} -> Ply2_de_stroke
			p95: BHC_DownMid{ball=5} -> Ply2_mid_stroke
			p96: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p97: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};


De_Ply2Serve = pcase {
			p98 : ServeT_in{ball=2} -> Ply1_BackHandR
			p99: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p100: ServeWide_in{ball=1} -> Ply1_ForeHandR
			p101: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p102: Serve_err{ball=9} -> De_Ply2Serve_2nd}; 

De_Ply2Serve_2nd = pcase {                 //1st serve is out
			p103: ServeT_in{ball=2} -> Ply1_BackHandR
			p104: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p105: ServeWide_in{ball=1} -> Ply1_ForeHandR
			p106: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p107: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
     		 };
     		 
Ad_Ply2Serve = pcase {
			p108: ServeT_in{ball=2} -> Ply1_ForeHandR
			p109: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p110: ServeWide_in{ball=3} -> Ply1_BackHandR
			p111: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p112: Serve_err{ball=9} -> Ad_Ply2Serve_2nd}; 

Ad_Ply2Serve_2nd = pcase {                 //1st serve is out
			p113: ServeT_in{ball=2} -> Ply1_ForeHandR
			p114: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p115: ServeWide_in{ball=3} -> Ply1_BackHandR
			p116: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p117: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
     		 };
     		 
Ply2_ForeHandR = ifa (turn == f_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
		  pcase {
			p118: FH_InsideOut{ball = 1} -> Ply1_de_stroke
			p119: FH_InsideIn{ball = 3} -> Ply1_ad_stroke
			p120: FH_CrossCourt{ball = 3} -> Ply1_ad_stroke
			p121: FH_DownMid{ball = 2} -> Ply1_mid_stroke
			p122: FHC_InsideOut{ball = 1} -> Ply1_de_stroke
			p123: FHC_InsideIn{ball = 3} -> Ply1_ad_stroke
			p124: FHC_CrossCourt{ball = 3} -> Ply1_ad_stroke
			p125: FHC_DownMid{ball = 2} -> Ply1_mid_stroke
			p126: FH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p127: FH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
      			p128: FH_CrossCourt{ ball = 3} -> Ply1_ad_stroke
			p129: FH_DownLine{ball = 1} -> Ply1_de_stroke
			p130: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p131: FHC_CrossCourt{ ball = 3} -> Ply1_ad_stroke
			p132: FHC_DownLine{ball = 1} -> Ply1_de_stroke
			p133: FHC_DownMid{ ball = 2} -> Ply1_mid_stroke
			p134: FH_Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p135: FH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};
      		 
Ply2_BackHandR = ifa (turn == f_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
			pcase {
			p136: BH_CrossCourt{ball = 1} -> Ply1_de_stroke
			p137: BH_DownLine{ball = 3} -> Ply1_ad_stroke
			p138: BH_DownMid{ball = 2} -> Ply1_mid_stroke
			p139: BHC_CrossCourt{ball = 1} -> Ply1_de_stroke
			p140: BHC_DownLine{ball = 3} -> Ply1_ad_stroke
			p141: BHC_DownMid{ball = 2} -> Ply1_mid_stroke
			p142: BH_Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                      else { turn = (turn+1)%4} }-> NextPt
			p142: BH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p143: BH_CrossCourt{ball = 1} -> Ply1_de_stroke
			p144: BH_InsideIn{ball = 1} -> Ply1_de_stroke
			p145: BH_InsideOut{ball = 3} -> Ply1_ad_stroke
			p146: BH_DownMid{ball = 2} -> Ply1_mid_stroke
			p147: BHC_CrossCourt{ball = 1} -> Ply1_de_stroke
			p148: BHC_InsideIn{ball = 1} -> Ply1_de_stroke
			p149: BHC_InsideOut{ball = 3} -> Ply1_ad_stroke
			p150: BHC_DownMid{ball = 2} -> Ply1_mid_stroke
			p151: BH_Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p152: BH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt			
      		 }};

// deuce stroke is when player2 hit position is 6
Ply2_de_stroke = pcase { // if already 
			p108: FH_InsideOut {ball = 1} -> Ply1_de_stroke
			p109: FH_insideIn {ball = 3} -> Ply1_ad_stroke
			p110: FH_DownMid {ball = 2} -> Ply1_mid_stroke
			p111: BH_Crosscourt {ball = 1} -> Ply1_de_stroke
			p112: BH_Downline {ball = 3} -> Ply1_ad_stroke
			p113: BH_DownMid {ball = 2} -> Ply1_mid_stroke
			p108: FHC_InsideOut {ball = 1} -> Ply1_de_stroke
			p109: FHC_insideIn {ball = 3} -> Ply1_ad_stroke
			p110: FHC_DownMid {ball = 2} -> Ply1_mid_stroke
			p111: BHC_Crosscourt {ball = 1} -> Ply1_de_stroke
			p112: BHC_Downline {ball = 3} -> Ply1_ad_stroke
			p113: BHC_DownMid {ball = 2} -> Ply1_mid_stroke
			p114: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p115: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// mid stroke is when player2 hit position is 5
Ply2_mid_stroke = noMove -> pcase{
			p116: FH_InsideOut {ball = 1} -> Ply1_de_stroke
			p117: FH_Crosscourt{ball = 3} -> Ply1_ad_stroke
			p118: FH_DownMid {ball = 2} -> Ply1_mid_stroke
			p119: BH_InsideOut {ball = 3} -> Ply1_ad_stroke
			p120: BH_Crosscourt {ball = 1} -> Ply1_de_stroke
			p121: BH_DownMid {ball = 2} -> Ply1_mid_stroke
			p116: FHC_InsideOut {ball = 1} -> Ply1_de_stroke
			p117: FHC_Crosscourt{ball = 3} -> Ply1_ad_stroke
			p118: FHC_DownMid {ball = 2} -> Ply1_mid_stroke
			p119: BHC_InsideOut {ball = 3} -> Ply1_ad_stroke
			p120: BHC_Crosscourt {ball = 1} -> Ply1_de_stroke
			p121: BHC_DownMid {ball = 2} -> Ply1_mid_stroke
			p122: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p123: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// ad stroke is when player 2 hit position is 4
Ply2_ad_stroke = pcase{
			p124: FH_Crosscourt {ball = 3} -> Ply1_ad_stroke
			p125: FH_Downline {ball = 1} -> Ply1_de_stroke
			p126: FH_DownMid {ball = 2} -> Ply1_mid_stroke
			p127: BH_InsideIn {ball = 1} -> Ply1_de_stroke
			p128: BH_InsideOut {ball = 3} -> Ply1_ad_stroke
			p129: BH_DownMid {ball = 2} -> Ply1_mid_stroke
			p124: FHC_Crosscourt {ball = 3} -> Ply1_ad_stroke
			p125: FHC_Downline {ball = 1} -> Ply1_de_stroke
			p126: FHC_DownMid {ball = 2} -> Ply1_mid_stroke
			p127: BHC_InsideIn {ball = 1} -> Ply1_de_stroke
			p128: BHC_InsideOut {ball = 3} -> Ply1_ad_stroke
			p129: BHC_DownMid {ball = 2} -> Ply1_mid_stroke
			p130: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p131: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};    		             

#define player1Win won == player1;
#assert TieBreakGame reaches player1Win with prob;