enum{f_ad_ct, f_de_ct, n_ad_ct, n_de_ct}; //serve position: ad court or deuce court
enum{player1, player2, na};

var turn = na; //serve turn;
var fscore = 0;
var nscore = 0;
var won = na;
var ball = 9;
var points = 7;
#define p0 133;
#define p1 27;
#define p2 188;
#define p3 52;
#define p4 259;
#define p5 16;
#define p6 61;
#define p7 137;
#define p8 1;
#define p9 44;
#define p10 131;
#define p11 10;
#define p12 177;
#define p13 44;
#define p14 238;
#define p15 95;
#define p16 63;
#define p17 50;
#define p18 1;
#define p19 29;
#define p20 98;
#define p21 12;
#define p22 150;
#define p23 3;
#define p24 54;
#define p25 20;
#define p26 9;
#define p27 4;
#define p28 107;
#define p29 5;
#define p30 37;
#define p31 31;
#define p32 7;
#define p33 46;
#define p34 196;
#define p35 1;
#define p36 52;
#define p37 137;
#define p38 19;
#define p39 210;
#define p40 7;
#define p41 74;
#define p42 471;
#define p43 112;
#define p44 277;
#define p45 0;
#define p46 0;
#define p47 1;
#define p48 3;
#define p49 23;
#define p50 3;
#define p51 0;
#define p52 0;
#define p53 1;
#define p54 82;
#define p55 181;
#define p56 161;
#define p57 413;
#define p58 251;
#define p59 74;
#define p60 123;
#define p61 179;
#define p62 25;
#define p63 18;
#define p64 5;
#define p65 2;
#define p66 4;
#define p67 2;
#define p68 125;
#define p69 232;
#define p70 34;
#define p71 23;
#define p72 13;
#define p73 417;
#define p74 107;
#define p75 469;
#define p76 2;
#define p77 1;
#define p78 2;
#define p79 3;
#define p80 9;
#define p81 0;
#define p82 99;
#define p83 233;
#define p84 1;
#define p85 0;
#define p86 3;
#define p87 0;
#define p88 0;
#define p89 0;
#define p90 13;
#define p91 7;
#define p92 10;
#define p93 0;
#define p94 0;
#define p95 0;
#define p96 4;
#define p97 11;
#define p98 1;
#define p99 0;
#define p100 0;
#define p101 0;
#define p102 0;
#define p103 0;
#define p104 0;
#define p105 2;
#define p106 5;
#define p107 1;
#define p108 2;
#define p109 3;
#define p110 3;
#define p111 2;
#define p112 0;
#define p113 0;
#define p114 0;
#define p115 3;
#define p116 2;
#define p117 9;
#define p118 0;
#define p119 0;
#define p120 0;
#define p121 14;
#define p122 8;
#define p123 18;
#define p124 4;
#define p125 24;
#define p126 1;
#define p127 0;
#define p128 0;
#define p129 0;
#define p130 0;
#define p131 0;
#define p132 8;
#define p133 2;
#define p134 1;
#define p135 1;
#define p136 0;
#define p137 0;
#define p138 0;
#define p139 0;
#define p140 13;
#define p141 2;
#define p142 0;
#define p143 0;
#define p144 0;
#define p145 0;
#define p146 0;
#define p147 0;
#define p148 8;
#define p149 7;
#define p150 205;
#define p151 90;
#define p152 150;
#define p153 9;
#define p154 273;
#define p155 118;
#define p156 77;
#define p157 45;
#define p158 2;
#define p159 31;
#define p160 84;
#define p161 74;
#define p162 285;
#define p163 8;
#define p164 223;
#define p165 12;
#define p166 62;
#define p167 113;
#define p168 0;
#define p169 36;
#define p170 37;
#define p171 8;
#define p172 7;
#define p173 105;
#define p174 5;
#define p175 50;
#define p176 84;
#define p177 6;
#define p178 115;
#define p179 6;
#define p180 74;
#define p181 96;
#define p182 24;
#define p183 145;
#define p184 10;
#define p185 70;
#define p186 20;
#define p187 3;
#define p188 31;
#define p189 142;
#define p190 3;
#define p191 37;
#define p192 22;
#define p193 8;
#define p194 13;
#define p195 465;
#define p196 122;
#define p197 375;
#define p198 0;
#define p199 6;
#define p200 0;
#define p201 5;
#define p202 13;
#define p203 3;
#define p204 48;
#define p205 229;
#define p206 197;
#define p207 420;
#define p208 272;
#define p209 95;
#define p210 167;
#define p211 250;
#define p212 22;
#define p213 37;
#define p214 7;
#define p215 7;
#define p216 9;
#define p217 4;
#define p218 142;
#define p219 259;
#define p220 526;
#define p221 93;
#define p222 177;
#define p223 1;
#define p224 1;
#define p225 0;
#define p226 18;
#define p227 11;
#define p228 3;
#define p229 0;
#define p230 0;
#define p231 0;
#define p232 79;
#define p233 203;
#define p234 0;
#define p235 0;
#define p236 0;
#define p237 0;
#define p238 0;
#define p239 6;
#define p240 0;
#define p241 0;
#define p242 0;
#define p243 4;
#define p244 3;
#define p245 5;
#define p246 5;
#define p247 10;
#define p248 1;
#define p249 0;
#define p250 0;
#define p251 1;
#define p252 0;
#define p253 0;
#define p254 0;
#define p255 1;
#define p256 2;
#define p257 0;
#define p258 1;
#define p259 3;
#define p260 2;
#define p261 2;
#define p262 1;
#define p263 1;
#define p264 9;
#define p265 0;
#define p266 0;
#define p267 0;
#define p268 10;
#define p269 6;
#define p270 7;
#define p271 0;
#define p272 1;
#define p273 0;
#define p274 6;
#define p275 16;
#define p276 0;
#define p277 0;
#define p278 0;
#define p279 1;
#define p280 0;
#define p281 0;
#define p282 15;
#define p283 8;
#define p284 1;
#define p285 2;
#define p286 0;
#define p287 0;
#define p288 0;
#define p289 1;
#define p290 25;
#define p291 7;
#define p292 3;
#define p293 1;
#define p294 0;
#define p295 0;
#define p296 0;
#define p297 0;
#define p298 12;
#define p299 7;
TieBreakGame = WhoServe1st; (Player1Serve [] Player2Serve);
WhoServe1st = []i:{f_de_ct,n_de_ct}@ TossCoin{turn = i} -> Skip;
Player1Serve = [won == na && turn == f_de_ct ]FedReady_DeCt -> De_Ply1Serve [] [won == na && turn == f_ad_ct] FedReady_AdCt -> Ad_Ply1Serve;
Player2Serve = [won == na && turn == n_de_ct]NadReady_DeCt -> De_Ply2Serve [] [ won == na && turn == n_ad_ct] NadReady_AdCt -> Ad_Ply2Serve;
NextPt = Player1Serve [] Player2Serve [] ([won != na] GameOver -> Skip);
 
De_Ply1Serve = pcase {
   p0: ServeT_in{ball=5} -> Ply2_ForeHandR
   p1: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p2: ServeWide_in{ball=6} -> Ply2_BackHandR
   p3: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p4: Serve_err{ball=9} -> De_Ply1Serve_2nd};
 
De_Ply1Serve_2nd = pcase {                 //1st serve is out
   p5: ServeT_in{ball=5} -> Ply2_ForeHandR
   p6: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p7: ServeWide_in{ball=6} -> Ply2_BackHandR
   p8: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p9: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2}
                                                                else { turn = (turn+1)%4} }-> NextPt
        };
 
Ad_Ply1Serve = pcase {
   p10: ServeT_in{ball=5} -> Ply2_BackHandR
   p11: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p12: ServeWide_in{ball=4} -> Ply2_ForeHandR
   p13: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p14: Serve_err{ball=9} -> Ad_Ply1Serve_2nd};
 
Ad_Ply1Serve_2nd = pcase {                 //1st serve is out
   p15: ServeT_in{ball=5} -> Ply2_BackHandR
   p16: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p17: ServeWide_in{ball=4} -> Ply2_ForeHandR
   p18: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p19: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2}
                                                                else { turn = (turn+1)%4} }-> NextPt
        };
         
Ply1_ForeHandR = ifa (turn == n_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
   pcase {
   p20: FH_CrossCourt{ball=6} -> Ply2_de_stroke
   p21: FH_DownLine{ball=4} -> Ply2_ad_stroke
   p22: FH_DownMid{ball=5} -> Ply2_mid_stroke
   p23: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p24: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
   p25: FH_InsideOut{ball =4} -> Ply2_ad_stroke
   p26: FH_InsideIn{ball=6} -> Ply2_de_stroke
   p27: FH_CrossCourt{ball=6} -> Ply2_de_stroke
   p28: FH_DownMid{ball=5} -> Ply2_mid_stroke
   p29: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p30: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
 
Ply1_BackHandR = ifa (turn == n_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
   pcase {
   p31: BH_CrossCourt{ball=4} -> Ply2_ad_stroke
   p32: BH_InsideIn{ball=4} -> Ply2_ad_stroke
   p33: BH_InsideOut{ball=6} -> Ply2_de_stroke
   p34: BH_DownMid{ball=5} -> Ply2_mid_stroke
   p35: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p36: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
   p37: BH_CrossCourt{ball=4} -> Ply2_ad_stroke
   p38: BH_DownLine{ball=6} -> Ply2_de_stroke
   p39: BH_DownMid{ball=5} -> Ply2_mid_stroke
   p40: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p41: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
 
// deuce stroke is when player1 hit position is 1
Ply1_de_stroke = pcase{
   p42: FH_NA_Crosscourt{ball=6} -> Ply2_de_stroke
   p43: FH_NA_Downline{ball=4} -> Ply2_ad_stroke
   p44: FH_NA_DownMid{ball=5} -> Ply2_mid_stroke
   p45: BH_NA_InsideIn{ball=4} -> Ply2_ad_stroke
   p46: BH_NA_InsideOut{ball=6} -> Ply2_de_stroke
   p47: BH_NA_DownMid{ball=5} -> Ply2_mid_stroke
         p48: FH_A_Crosscourt{ball=6} -> Ply2_de_stroke_ap
   p49: FH_A_Downline{ball=4} -> Ply2_ad_stroke_ap
   p50: FH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p51: BH_A_InsideIn{ball=4} -> Ply2_ad_stroke_ap
   p52: BH_A_InsideOut{ball=6} -> Ply2_de_stroke_ap
   p53: BH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p54: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p55: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
  
// mid stroke is when player1 hit position is 2
Ply1_mid_stroke = pcase{
   p56: FH_NA_InsideOut{ball=4} -> Ply2_ad_stroke
   p57: FH_NA_Crosscourt{ball=6} -> Ply2_de_stroke
   p58: FH_NA_DownMid{ball=5} -> Ply2_mid_stroke
   p59: BH_NA_InsideOut{ball=6} -> Ply2_de_stroke
   p60: BH_NA_Crosscourt{ball=4} -> Ply2_ad_stroke
   p61: BH_NA_DownMid{ball=5} -> Ply2_mid_stroke
         p62: FH_A_InsideOut{ball=4} -> Ply2_ad_stroke_ap
   p63: FH_A_Crosscourt{ball=6} -> Ply2_de_stroke_ap
   p64: FH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p65: BH_A_InsideOut{ball=6} -> Ply2_de_stroke_ap
   p66: BH_A_Crosscourt{ball=4} -> Ply2_ad_stroke_ap
   p67: BH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p68: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p69: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
 
// ad stroke is when player1 hit position is 3
Ply1_ad_stroke = pcase{
   p70: FH_NA_InsideOut{ball=4} -> Ply2_ad_stroke
   p71: FH_NA_InsideIn{ball=6} -> Ply2_de_stroke
   p72: FH_NA_DownMid{ball=5} -> Ply2_mid_stroke
   p73: BH_NA_Crosscourt{ball=4} -> Ply2_ad_stroke
   p74: BH_NA_Downline{ball=6} -> Ply2_de_stroke
   p75: BH_NA_DownMid{ball=5} -> Ply2_mid_stroke
         p76: FH_A_InsideOut{ball=4} -> Ply2_ad_stroke_ap
   p77: FH_A_InsideIn{ball=6} -> Ply2_de_stroke_ap
   p78: FH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p79: BH_A_Crosscourt{ball=4} -> Ply2_ad_stroke_ap
   p80: BH_A_Downline{ball=6} -> Ply2_de_stroke_ap
   p81: BH_A_DownMid{ball=5} -> Ply2_mid_stroke_ap
   p82: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p83: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// deuce stroke is when player1 hit position is 1
Ply1_de_stroke_ap = pcase{
   p84: FH_LV_Crosscourt{ball=6} -> Ply2_de_stroke
   p85: FH_LV_Downline{ball=4} -> Ply2_ad_stroke
   p86: FH_LV_DownMid{ball=5} -> Ply2_mid_stroke
   p87: BH_LV_InsideIn{ball=4} -> Ply2_ad_stroke
   p88: BH_LV_InsideOut{ball=6} -> Ply2_de_stroke
   p89: BH_LV_DownMid{ball=5} -> Ply2_mid_stroke
         p90: FH_NLV_Crosscourt{ball=6} -> Ply2_de_stroke_NLV
   p91: FH_NLV_Downline{ball=4} -> Ply2_ad_stroke_NLV
   p92: FH_NLV_DownMid{ball=5} -> Ply2_mid_stroke_NLV
   p93: BH_NLV_InsideIn{ball=4} -> Ply2_ad_stroke_NLV
   p94: BH_NLV_InsideOut{ball=6} -> Ply2_de_stroke_NLV
   p95: BH_NLV_DownMid{ball=5} -> Ply2_mid_stroke_NLV
   p96: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p97: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
  
// mid stroke is when player1 hit position is 2
Ply1_mid_stroke_ap = pcase{
   p98: FH_LV_InsideOut{ball=4} -> Ply2_ad_stroke
   p99: FH_LV_Crosscourt{ball=6} -> Ply2_de_stroke
   p100: FH_LV_DownMid{ball=5} -> Ply2_mid_stroke
   p101: BH_LV_InsideOut{ball=6} -> Ply2_de_stroke
   p102: BH_LV_Crosscourt{ball=4} -> Ply2_ad_stroke
   p103: BH_LV_DownMid{ball=5} -> Ply2_mid_stroke
         p104: FH_NLV_InsideOut{ball=4} -> Ply2_ad_stroke_NLV
   p105: FH_NLV_Crosscourt{ball=6} -> Ply2_de_stroke_NLV
   p106: FH_NLV_DownMid{ball=5} -> Ply2_mid_stroke_NLV
   p107: BH_NLV_InsideOut{ball=6} -> Ply2_de_stroke_NLV
   p108: BH_NLV_Crosscourt{ball=4} -> Ply2_ad_stroke_NLV
   p109: BH_NLV_DownMid{ball=5} -> Ply2_mid_stroke_NLV
   p110: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p111: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
 
// ad stroke is when player1 hit position is 3
Ply1_ad_stroke_ap = pcase{
   p112: FH_LV_InsideOut{ball=4} -> Ply2_ad_stroke
   p113: FH_LV_InsideIn{ball=6} -> Ply2_de_stroke
   p114: FH_LV_DownMid{ball=5} -> Ply2_mid_stroke
   p115: BH_LV_Crosscourt{ball=4} -> Ply2_ad_stroke
   p116: BH_LV_Downline{ball=6} -> Ply2_de_stroke
   p117: BH_LV_DownMid{ball=5} -> Ply2_mid_stroke
         p118: FH_NLV_InsideOut{ball=4} -> Ply2_ad_stroke_NLV
   p119: FH_NLV_InsideIn{ball=6} -> Ply2_de_stroke_NLV
   p120: FH_NLV_DownMid{ball=5} -> Ply2_mid_stroke_NLV
   p121: BH_NLV_Crosscourt{ball=4} -> Ply2_ad_stroke_NLV
   p122: BH_NLV_Downline{ball=6} -> Ply2_de_stroke_NLV
   p123: BH_NLV_DownMid{ball=5} -> Ply2_mid_stroke_NLV
   p124: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p125: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// deuce stroke is when player1 hit position is 1
Ply1_de_stroke_NLV = pcase{
   p126: FH_NV_Crosscourt{ball=6} -> Ply2_de_stroke
   p127: FH_NV_Downline{ball=4} -> Ply2_ad_stroke
   p128: FH_NV_DownMid{ball=5} -> Ply2_mid_stroke
   p129: BH_NV_InsideIn{ball=4} -> Ply2_ad_stroke
   p130: BH_NV_InsideOut{ball=6} -> Ply2_de_stroke
   p131: BH_NV_DownMid{ball=5} -> Ply2_mid_stroke
   p132: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p133: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
  
// mid stroke is when player1 hit position is 2
Ply1_mid_stroke_NLV = pcase{
   p134: FH_NV_InsideOut{ball=4} -> Ply2_ad_stroke
   p135: FH_NV_Crosscourt{ball=6} -> Ply2_de_stroke
   p136: FH_NV_DownMid{ball=5} -> Ply2_mid_stroke
   p137: BH_NV_InsideOut{ball=6} -> Ply2_de_stroke
   p138: BH_NV_Crosscourt{ball=4} -> Ply2_ad_stroke
   p139: BH_NV_DownMid{ball=5} -> Ply2_mid_stroke
   p140: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p141: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
 
// ad stroke is when player1 hit position is 3
Ply1_ad_stroke_NLV = pcase{
   p142: FH_NV_InsideOut{ball=4} -> Ply2_ad_stroke
   p143: FH_NV_InsideIn{ball=6} -> Ply2_de_stroke
   p144: FH_NV_DownMid{ball=5} -> Ply2_mid_stroke
   p145: BH_NV_Crosscourt{ball=4} -> Ply2_ad_stroke
   p146: BH_NV_Downline{ball=6} -> Ply2_de_stroke
   p147: BH_NV_DownMid{ball=5} -> Ply2_mid_stroke
   p148: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p149: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
 
De_Ply2Serve = pcase {
   p150: ServeT_in{ball=2} -> Ply1_BackHandR
   p151: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p152: ServeWide_in{ball=1} -> Ply1_ForeHandR
   p153: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p154: Serve_err{ball=9} -> De_Ply2Serve_2nd};
 
De_Ply2Serve_2nd = pcase {                 //1st serve is out
   p155: ServeT_in{ball=2} -> Ply1_BackHandR
   p156: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p157: ServeWide_in{ball=1} -> Ply1_ForeHandR
   p158: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p159: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
        };
         
Ad_Ply2Serve = pcase {
   p160: ServeT_in{ball=2} -> Ply1_ForeHandR
   p161: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p162: ServeWide_in{ball=3} -> Ply1_BackHandR
   p163: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p164: Serve_err{ball=9} -> Ad_Ply2Serve_2nd};
 
Ad_Ply2Serve_2nd = pcase {                 //1st serve is out
   p165: ServeT_in{ball=2} -> Ply1_ForeHandR
   p166: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p167: ServeWide_in{ball=3} -> Ply1_BackHandR
   p168: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p169: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
        };
         
Ply2_ForeHandR = ifa (turn == f_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
    pcase {
   p170: FH_InsideOut{ball = 1} -> Ply1_de_stroke
   p171: FH_InsideIn{ball = 3} -> Ply1_ad_stroke
   p172: FH_CrossCourt{ball = 3} -> Ply1_ad_stroke
   p173: FH_DownMid{ball = 2} -> Ply1_mid_stroke
   p174: FH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p175: FH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
         p176: FH_CrossCourt{ ball = 3} -> Ply1_ad_stroke
   p177: FH_DownLine{ball = 1} -> Ply1_de_stroke
   p178: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
   p179: FH_Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p180: FH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
          
Ply2_BackHandR = ifa (turn == f_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
   pcase {
   p181: BH_CrossCourt{ball = 1} -> Ply1_de_stroke
   p182: BH_DownLine{ball = 3} -> Ply1_ad_stroke
   p183: BH_DownMid{ball = 2} -> Ply1_mid_stroke
   p184: BH_Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                              else { turn = (turn+1)%4} }-> NextPt
   p185: BH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
   p186: BH_CrossCourt{ball = 1} -> Ply1_de_stroke
   p187: BH_InsideIn{ball = 1} -> Ply1_de_stroke
   p188: BH_InsideOut{ball = 3} -> Ply1_ad_stroke
   p189: BH_DownMid{ball = 2} -> Ply1_mid_stroke
   p190: BH_Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p191: BH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
 
// deuce stroke is when player2 hit position is 6
Ply2_de_stroke = pcase { // if already
   p192: FH_NA_InsideOut {ball = 1} -> Ply1_de_stroke
   p193: FH_NA_insideIn {ball = 3} -> Ply1_ad_stroke
   p194: FH_NA_DownMid {ball = 2} -> Ply1_mid_stroke
   p195: BH_NA_Crosscourt {ball = 1} -> Ply1_de_stroke
   p196: BH_NA_Downline {ball = 3} -> Ply1_ad_stroke
   p197: BH_NA_DownMid {ball = 2} -> Ply1_mid_stroke
         p198: FH_A_InsideOut {ball = 1} -> Ply1_de_stroke_ap
   p199: FH_A_insideIn {ball = 3} -> Ply1_ad_stroke_ap
   p200: FH_A_DownMid {ball = 2} -> Ply1_mid_stroke_ap
   p201: BH_A_Crosscourt {ball = 1} -> Ply1_de_stroke_ap
   p202: BH_A_Downline {ball = 3} -> Ply1_ad_stroke_ap
   p203: BH_A_DownMid {ball = 2} -> Ply1_mid_stroke_ap
   p204: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p205: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// mid stroke is when player2 hit position is 5
Ply2_mid_stroke = noMove -> pcase{
   p206: FH_NA_InsideOut {ball = 1} -> Ply1_de_stroke
   p207: FH_NA_Crosscourt{ball = 3} -> Ply1_ad_stroke
   p208: FH_NA_DownMid {ball = 2} -> Ply1_mid_stroke
   p209: BH_NA_InsideOut {ball = 3} -> Ply1_ad_stroke
   p210: BH_NA_Crosscourt {ball = 1} -> Ply1_de_stroke
   p211: BH_NA_DownMid {ball = 2} -> Ply1_mid_stroke
         p212: FH_A_InsideOut {ball = 1} -> Ply1_de_stroke_ap
   p213: FH_A_Crosscourt{ball = 3} -> Ply1_ad_stroke_ap
   p214: FH_A_DownMid {ball = 2} -> Ply1_mid_stroke_ap
   p215: BH_A_InsideOut {ball = 3} -> Ply1_ad_stroke_ap
   p216: BH_A_Crosscourt {ball = 1} -> Ply1_de_stroke_ap
   p217: BH_A_DownMid {ball = 2} -> Ply1_mid_stroke_ap
   p218: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p219: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// ad stroke is when player 2 hit position is 4
Ply2_ad_stroke = pcase{
   p220: FH_NA_Crosscourt {ball = 3} -> Ply1_ad_stroke
   p221: FH_NA_Downline {ball = 1} -> Ply1_de_stroke
   p222: FH_NA_DownMid {ball = 2} -> Ply1_mid_stroke
   p223: BH_NA_InsideIn {ball = 1} -> Ply1_de_stroke
   p224: BH_NA_InsideOut {ball = 3} -> Ply1_ad_stroke
   p225: BH_NA_DownMid {ball = 2} -> Ply1_mid_stroke
         p226: FH_A_Crosscourt {ball = 3} -> Ply1_ad_stroke_ap
   p227: FH_A_Downline {ball = 1} -> Ply1_de_stroke_ap
   p228: FH_A_DownMid {ball = 2} -> Ply1_mid_stroke_ap
   p229: BH_A_InsideIn {ball = 1} -> Ply1_de_stroke_ap
   p230: BH_A_InsideOut {ball = 3} -> Ply1_ad_stroke_ap
   p231: BH_A_DownMid {ball = 2} -> Ply1_mid_stroke_ap
   p232: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p233: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// deuce stroke is when player2 hit position is 6
Ply2_de_stroke_ap = pcase { // if already
   p234: FH_LV_InsideOut {ball = 1} -> Ply1_de_stroke
   p235: FH_LV_insideIn {ball = 3} -> Ply1_ad_stroke
   p236: FH_LV_DownMid {ball = 2} -> Ply1_mid_stroke
   p237: BH_LV_Crosscourt {ball = 1} -> Ply1_de_stroke
   p238: BH_LV_Downline {ball = 3} -> Ply1_ad_stroke
   p239: BH_LV_DownMid {ball = 2} -> Ply1_mid_stroke
         p240: FH_NLV_InsideOut {ball = 1} -> Ply1_de_stroke_NLV
   p241: FH_NLV_insideIn {ball = 3} -> Ply1_ad_stroke_NLV
   p242: FH_NLV_DownMid {ball = 2} -> Ply1_mid_stroke_NLV
   p243: BH_NLV_Crosscourt {ball = 1} -> Ply1_de_stroke_NLV
   p244: BH_NLV_Downline {ball = 3} -> Ply1_ad_stroke_NLV
   p245: BH_NLV_DownMid {ball = 2} -> Ply1_mid_stroke_NLV
   p246: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p247: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// mid stroke is when player2 hit position is 5
Ply2_mid_stroke_ap = noMove -> pcase{
   p248: FH_LV_InsideOut {ball = 1} -> Ply1_de_stroke
   p249: FH_LV_Crosscourt{ball = 3} -> Ply1_ad_stroke
   p250: FH_LV_DownMid {ball = 2} -> Ply1_mid_stroke
   p251: BH_LV_InsideOut {ball = 3} -> Ply1_ad_stroke
   p252: BH_LV_Crosscourt {ball = 1} -> Ply1_de_stroke
   p253: BH_LV_DownMid {ball = 2} -> Ply1_mid_stroke
         p254: FH_NLV_InsideOut {ball = 1} -> Ply1_de_stroke_NLV
   p255: FH_NLV_Crosscourt{ball = 3} -> Ply1_ad_stroke_NLV
   p256: FH_NLV_DownMid {ball = 2} -> Ply1_mid_stroke_NLV
   p257: BH_NLV_InsideOut {ball = 3} -> Ply1_ad_stroke_NLV
   p258: BH_NLV_Crosscourt {ball = 1} -> Ply1_de_stroke_NLV
   p259: BH_NLV_DownMid {ball = 2} -> Ply1_mid_stroke_NLV
   p260: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p261: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// ad stroke is when player 2 hit position is 4
Ply2_ad_stroke_ap = pcase{
   p262: FH_LV_Crosscourt {ball = 3} -> Ply1_ad_stroke
   p263: FH_LV_Downline {ball = 1} -> Ply1_de_stroke
   p264: FH_LV_DownMid {ball = 2} -> Ply1_mid_stroke
   p265: BH_LV_InsideIn {ball = 1} -> Ply1_de_stroke
   p266: BH_LV_InsideOut {ball = 3} -> Ply1_ad_stroke
   p267: BH_LV_DownMid {ball = 2} -> Ply1_mid_stroke
         p268: FH_NLV_Crosscourt {ball = 3} -> Ply1_ad_stroke_NLV
   p269: FH_NLV_Downline {ball = 1} -> Ply1_de_stroke_NLV
   p270: FH_NLV_DownMid {ball = 2} -> Ply1_mid_stroke_NLV
   p271: BH_NLV_InsideIn {ball = 1} -> Ply1_de_stroke_NLV
   p272: BH_NLV_InsideOut {ball = 3} -> Ply1_ad_stroke_NLV
   p273: BH_NLV_DownMid {ball = 2} -> Ply1_mid_stroke_NLV
   p274: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p275: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// deuce stroke is when player2 hit position is 6
Ply2_de_stroke_NLV = pcase { // if already
   p276: FH_NV_InsideOut {ball = 1} -> Ply1_de_stroke
   p277: FH_NV_insideIn {ball = 3} -> Ply1_ad_stroke
   p278: FH_NV_DownMid {ball = 2} -> Ply1_mid_stroke
   p279: BH_NV_Crosscourt {ball = 1} -> Ply1_de_stroke
   p280: BH_NV_Downline {ball = 3} -> Ply1_ad_stroke
   p281: BH_NV_DownMid {ball = 2} -> Ply1_mid_stroke
   p282: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p283: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// mid stroke is when player2 hit position is 5
Ply2_mid_stroke_NLV = noMove -> pcase{
   p284: FH_NV_InsideOut {ball = 1} -> Ply1_de_stroke
   p285: FH_NV_Crosscourt{ball = 3} -> Ply1_ad_stroke
   p286: FH_NV_DownMid {ball = 2} -> Ply1_mid_stroke
   p287: BH_NV_InsideOut {ball = 3} -> Ply1_ad_stroke
   p288: BH_NV_Crosscourt {ball = 1} -> Ply1_de_stroke
   p289: BH_NV_DownMid {ball = 2} -> Ply1_mid_stroke
   p290: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p291: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// ad stroke is when player 2 hit position is 4
Ply2_ad_stroke_NLV = pcase{
   p292: FH_NV_Crosscourt {ball = 3} -> Ply1_ad_stroke
   p293: FH_NV_Downline {ball = 1} -> Ply1_de_stroke
   p294: FH_NV_DownMid {ball = 2} -> Ply1_mid_stroke
   p295: BH_NV_InsideIn {ball = 1} -> Ply1_de_stroke
   p296: BH_NV_InsideOut {ball = 3} -> Ply1_ad_stroke
   p297: BH_NV_DownMid {ball = 2} -> Ply1_mid_stroke
   p298: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p299: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
#define player1Win won == player1;
#assert TieBreakGame reaches player1Win with prob;
