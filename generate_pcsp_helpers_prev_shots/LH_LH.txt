TieBreakGame = WhoServe1st; (Player1Serve [] Player2Serve);
WhoServe1st = []i:{f_de_ct,n_de_ct}@ TossCoin{turn = i} -> Skip;
Player1Serve = [won == na && turn == f_de_ct ]FedReady_DeCt -> De_Ply1Serve [] [won == na && turn == f_ad_ct] FedReady_AdCt -> Ad_Ply1Serve;
Player2Serve = [won == na && turn == n_de_ct]NadReady_DeCt -> De_Ply2Serve [] [ won == na && turn == n_ad_ct] NadReady_AdCt -> Ad_Ply2Serve;
NextPt = Player1Serve [] Player2Serve [] ([won != na] GameOver -> Skip);
 
De_Ply1Serve = pcase {
   p0: ServeT_in{ball=5} -> Ply2_ForeHandR
   p1: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p2: ServeWide_in{ball=6} -> Ply2_BackHandR
   p3: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p4: Serve_err{ball=9} -> De_Ply1Serve_2nd};
 
De_Ply1Serve_2nd = pcase {                 //1st serve is out
   p5: ServeT_in{ball=5} -> Ply2_ForeHandR
   p6: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p7: ServeWide_in{ball=6} -> Ply2_BackHandR
   p8: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p9: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2}
                                                                else { turn = (turn+1)%4} }-> NextPt
        };
 
Ad_Ply1Serve = pcase {
   p10: ServeT_in{ball=5} -> Ply2_BackHandR
   p11: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p12: ServeWide_in{ball=4} -> Ply2_ForeHandR
   p13: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p14: Serve_err{ball=9} -> Ad_Ply1Serve_2nd};
 
Ad_Ply1Serve_2nd = pcase {                 //1st serve is out
   p15: ServeT_in{ball=5} -> Ply2_BackHandR
   p16: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
   p17: ServeWide_in{ball=4} -> Ply2_ForeHandR
   p18: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1}
                                                                else { turn = (turn+1)%4} }-> NextPt
   p19: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2}
                                                                else { turn = (turn+1)%4} }-> NextPt
        };
         
Ply1_ForeHandR = ifa (turn == n_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
   pcase {
   p20: FH_InsideOut{ball=6} -> Ply2_de_stroke
   p21: FH_InsideIn{ball=4} -> Ply2_ad_stroke
   p22: FH_CrossCourt{ball=4} -> Ply2_ad_stroke
   p23: FH_DownMid{ball=5} -> Ply2_mid_stroke
   p24: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p25: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
   p26: FH_CrossCourt{ball=4} -> Ply2_ad_stroke
   p27: FH_DownLine{ball=6} -> Ply2_de_stroke
   p28: FH_DownMid{ball=5} -> Ply2_mid_stroke
   p29: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p30: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
 
Ply1_BackHandR = ifa (turn == n_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
   pcase {
   p31: BH_CrossCourt{ball=6} -> Ply2_de_stroke
   p32: BH_DownLine{ball=4} -> Ply2_ad_stroke
   p33: BH_DownMid{ball=5} -> Ply2_mid_stroke
   p34: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p35: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
   p36: BH_CrossCourt{ball=6} -> Ply2_de_stroke
   p37: BH_InsideIn{ball=6} -> Ply2_de_stroke
   p38: BH_InsideOut{ball=4} -> Ply2_ad_stroke
   p39: BH_DownMid{ball=5} -> Ply2_mid_stroke
   p40: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p41: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
 
// deuce stroke is when player1 hit position is 1
Ply1_de_stroke = pcase{
   p42: FH_FH_InsideOut{ball=6} -> Ply2_de_stroke
   p43: FH_FH_InsideIn{ball=4} -> Ply2_ad_stroke
   p44: FH_FH_DownMid{ball=5} -> Ply2_mid_stroke
 
   p45: FH_BH_InsideOut{ball=6} -> Ply2_de_stroke
   p46: FH_BH_InsideIn{ball=4} -> Ply2_ad_stroke
   p47: FH_BH_DownMid{ball=5} -> Ply2_mid_stroke
 
   p48: BH_BH_Crosscourt{ball=6} -> Ply2_de_stroke
   p49: BH_BH_Downline{ball=4} -> Ply2_ad_stroke
   p50: BH_BH_DownMid{ball=5} -> Ply2_mid_stroke
 
    
   p51: BH_FH_Crosscourt{ball=6} -> Ply2_de_stroke
   p52: BH_FH_Downline{ball=4} -> Ply2_ad_stroke
   p53: BH_FH_DownMid{ball=5} -> Ply2_mid_stroke
 
   p54: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p55: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
  
// mid stroke is when player1 hit position is 2
Ply1_mid_stroke = pcase{
   p56: FH_InsideOut{ball=6} -> Ply2_de_stroke
   p57: FH_Crosscourt{ball=4} -> Ply2_ad_stroke
   p58: FH_DownMid{ball=5} -> Ply2_mid_stroke
   p59: BH_InsideOut{ball=4} -> Ply2_ad_stroke
   p60: BH_Crosscourt{ball=6} -> Ply2_de_stroke
   p61: BH_DownMid{ball=5} -> Ply2_mid_stroke
   p62: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p63: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
 
// ad stroke is when player1 hit position is 3
Ply1_ad_stroke = pcase{
   p64: FH_FH_Crosscourt{ball=4} -> Ply2_ad_stroke
   p65: FH_FH_Downline{ball=6} -> Ply2_de_stroke
   p66: FH_FH_DownMid{ball=5} -> Ply2_mid_stroke
 
   p67: FH_BH_Crosscourt{ball=4} -> Ply2_ad_stroke
   p68: FH_BH_Downline{ball=6} -> Ply2_de_stroke
   p69: FH_BH_DownMid{ball=5} -> Ply2_mid_stroke
 
   p70: BH_BH_InsideIn{ball=6} -> Ply2_de_stroke
   p71: BH_BH_InsideOut{ball=4} -> Ply2_ad_stroke
   p72: BH_BH_DownMid{ball=5} -> Ply2_mid_stroke
 
 
   p73: BH_FH_InsideIn{ball=6} -> Ply2_de_stroke
   p74: BH_FH_InsideOut{ball=4} -> Ply2_ad_stroke
   p75: BH_FH_DownMid{ball=5} -> Ply2_mid_stroke
 
   p76: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p77: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
 
De_Ply2Serve = pcase {
   p66 : ServeT_in{ball=2} -> Ply1_ForeHandR
   p78: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p79: ServeWide_in{ball=1} -> Ply1_BackHandR
   p80: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p81: Serve_err{ball=9} -> De_Ply2Serve_2nd};
 
De_Ply2Serve_2nd = pcase {                 //1st serve is out
   p82: ServeT_in{ball=2} -> Ply1_ForeHandR
   p83: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p84: ServeWide_in{ball=1} -> Ply1_BackHandR
   p85: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p86: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
        };
         
Ad_Ply2Serve = pcase {
   p87: ServeT_in{ball=2} -> Ply1_BackHandR
   p88: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p89: ServeWide_in{ball=3} -> Ply1_ForeHandR
   p90: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p91: Serve_err{ball=9} -> Ad_Ply2Serve_2nd};
 
Ad_Ply2Serve_2nd = pcase {                 //1st serve is out
   p92: ServeT_in{ball=2} -> Ply1_BackHandR
   p93: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
   p94: ServeWide_in{ball=3} -> Ply1_ForeHandR
   p95: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p96: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
        };
         
Ply2_ForeHandR = ifa (turn == f_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
    pcase {
   p97: FH_InsideOut{ball = 1} -> Ply1_de_stroke
   p98: FH_InsideIn{ball = 3} -> Ply1_ad_stroke
   p99: FH_CrossCourt{ball = 3} -> Ply1_ad_stroke
   p100: FH_DownMid{ball = 2} -> Ply1_mid_stroke
   p101: FH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p102: FH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
         p103: FH_CrossCourt{ ball = 3} -> Ply1_ad_stroke
   p104: FH_DownLine{ball = 1} -> Ply1_de_stroke
   p105: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
   p106: FH_Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p107: FH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
          
Ply2_BackHandR = ifa (turn == f_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
   pcase {
   p108: BH_CrossCourt{ball = 1} -> Ply1_de_stroke
   p109: BH_DownLine{ball = 3} -> Ply1_ad_stroke
   p110: BH_DownMid{ball = 2} -> Ply1_mid_stroke
   p111: BH_Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                              else { turn = (turn+1)%4} }-> NextPt
   p112: BH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }}
         else {
        pcase {
   p113: BH_CrossCourt{ball = 1} -> Ply1_de_stroke
   p114: BH_InsideIn{ball = 1} -> Ply1_de_stroke
   p115: BH_InsideOut{ball = 3} -> Ply1_ad_stroke
   p116: BH_DownMid{ball = 2} -> Ply1_mid_stroke
   p117: BH_Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p118: BH_Error{ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
         }};
 
// deuce stroke is when player2 hit position is 6
Ply2_de_stroke = pcase { // if already
   p119: FH_FH_InsideOut {ball = 1} -> Ply1_de_stroke
   p120: FH_FH_insideIn {ball = 3} -> Ply1_ad_stroke
   p121: FH_FH_DownMid {ball = 2} -> Ply1_mid_stroke
 
   p122: FH_BH_InsideOut {ball = 1} -> Ply1_de_stroke
   p123: FH_BH_insideIn {ball = 3} -> Ply1_ad_stroke
   p124: FH_BH_DownMid {ball = 2} -> Ply1_mid_stroke
 
   p125: BH_BH_Crosscourt {ball = 1} -> Ply1_de_stroke
   p126: BH_BH_Downline {ball = 3} -> Ply1_ad_stroke
   p127: BH_BH_DownMid {ball = 2} -> Ply1_mid_stroke
 
   p128: BH_FH_Crosscourt {ball = 1} -> Ply1_de_stroke
   p129: BH_FH_Downline {ball = 3} -> Ply1_ad_stroke
   p130: BH_FH_DownMid {ball = 2} -> Ply1_mid_stroke
   p131: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p132: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// mid stroke is when player2 hit position is 5
Ply2_mid_stroke = noMove -> pcase{
   p133: FH_FH_InsideOut {ball = 1} -> Ply1_de_stroke
   p134: FH_FH_Crosscourt{ball = 3} -> Ply1_ad_stroke
   p135: FH_FH_DownMid {ball = 2} -> Ply1_mid_stroke
 
   p136: FH_BH_InsideOut {ball = 1} -> Ply1_de_stroke
   p137: FH_BH_Crosscourt{ball = 3} -> Ply1_ad_stroke
   p138: FH_BH_DownMid {ball = 2} -> Ply1_mid_stroke
 
   p139: BH_BH_InsideOut {ball = 3} -> Ply1_ad_stroke
   p140: BH_BH_Crosscourt {ball = 1} -> Ply1_de_stroke
   p141: BH_BH_DownMid {ball = 2} -> Ply1_mid_stroke
 
   p142: BH_FH_InsideOut {ball = 3} -> Ply1_ad_stroke
   p143: BH_FH_Crosscourt {ball = 1} -> Ply1_de_stroke
   p144: BH_FH_DownMid {ball = 2} -> Ply1_mid_stroke
 
   p145: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p146: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
// ad stroke is when player 2 hit position is 4
Ply2_ad_stroke = pcase{
   p147: FH_FH_Crosscourt {ball = 3} -> Ply1_ad_stroke
   p148: FH_FH_Downline {ball = 1} -> Ply1_de_stroke
   p149: FH_FH_DownMid {ball = 2} -> Ply1_mid_stroke
 
   p150: FH_BH_Crosscourt {ball = 3} -> Ply1_ad_stroke
   p151: FH_BH_Downline {ball = 1} -> Ply1_de_stroke
   p152: FH_BH_DownMid {ball = 2} -> Ply1_mid_stroke
 
   p153: BH_BH_InsideIn {ball = 1} -> Ply1_de_stroke
   p154: BH_BH_InsideOut {ball = 3} -> Ply1_ad_stroke
   p155: BH_BH_DownMid {ball = 2} -> Ply1_mid_stroke
 
   p156: BH_FH_InsideIn {ball = 1} -> Ply1_de_stroke
   p157: BH_FH_InsideOut {ball = 3} -> Ply1_ad_stroke
   p158: BH_FH_DownMid {ball = 2} -> Ply1_mid_stroke
    
   p159: Winner{ball = 9} -> {nscore++; if (nscore == points) {won = player2}
                                                             else { turn = (turn+1)%4} }-> NextPt
   p160: Error {ball = 9} -> {fscore++; if (fscore == points) {won = player1}
                                                             else { turn = (turn+1)%4} }-> NextPt
 };
 
#define player1Win won == player1;
#assert TieBreakGame reaches player1Win with prob;
